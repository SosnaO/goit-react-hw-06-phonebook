{"version":3,"sources":["components/ContactList/contactListItem.module.css","components/Filter/filter.module.css","components/ContactList/ContactListItem.js","components/redux/counter/counter-action.js","components/redux/counter/counter_selectors.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","components/redux/counter/counter-reducer.js","components/redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactListItem","name","number","id","onDelete","className","styles","contactListItem","contact","buttonDelete","type","onClick","addContact","createAction","payload","shortid","generate","deleteContact","changeFilter","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","includes","ContactList","useSelector","dispatch","useDispatch","map","contactsAction","ContactForm","onSubmit","useState","setName","setNumber","handleChange","event","target","value","form","contactName","preventDefault","some","alert","formLabel","formInput","pattern","title","required","onChange","buttonSubmit","Filter","filterLabel","filterInput","e","App","phonebook","createReducer","action","_","combineReducers","persistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","losding","document","getElementById"],"mappings":"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","file":"static/js/main.eb8b3c75.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"contactListItem_contactListItem__37Ktj\",\"contact\":\"contactListItem_contact__2DXtK\",\"buttonDelete\":\"contactListItem_buttonDelete__3fSj1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"filter_filterLabel__1tKfJ\",\"filterInput\":\"filter_filterInput___EWR2\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './contactListItem.module.css';\r\n\r\nconst ContactListItem = ({ name, number, id, onDelete }) => (\r\n  <li className={styles.contactListItem}>\r\n    <p className={styles.contact}>\r\n      {name}: {number}{' '}\r\n    </p>\r\n    <button\r\n     className={styles.buttonDelete}\r\n      type=\"button\"\r\n      onClick={() => onDelete(id)}\r\n    >\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;","import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('counter/formSubmitHandler', ({ name, number }) => ({\r\n    payload: {\r\n        id: shortid.generate(),\r\n        name,\r\n        number,\r\n    }, \r\n}));\r\nconst deleteContact = createAction('counter/deleteContacts');\r\nconst changeFilter = createAction('counter/changeFilter');\r\n\r\n// eslint-disable-next-line\r\nexport default { addContact, deleteContact, changeFilter };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//Redux\r\n\r\n// const changeFilter = element => ({\r\n//     type:types.CHANGE_FILTER,\r\n//     payload:element,\r\n// });\r\n\r\n// const deleteContacts = contactId =>({\r\n//     type:types.DELETE_CONTACTS,\r\n//     payload:contactId,\r\n//   });\r\n\r\n//   const formSubmitHandler =  ({ name, number }) => ({\r\n//         type: types.SUBMIT_HANDLER,\r\n//         payload: {\r\n//             id: shortid.generate(),\r\n//             name,\r\n//             number,\r\n//         },\r\n//     });\r\n\r\n// const exportedObject = {\r\n//     changeFilter,\r\n//     deleteContacts,\r\n//     formSubmitHandler,\r\n//   };\r\n  \r\n//   export default exportedObject;\r\n","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n    const contacts = getContacts(state);\r\n    const filter = getFilter(state);\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n        contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n};","import React from \"react\";\r\nimport ContactlistItem from './ContactListItem'\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport contactsAction from '../redux/counter/counter-action';\r\nimport { getVisibleContacts } from '../redux/counter/counter_selectors';\r\n    \r\nconst ContactList = () => {\r\n    const contacts = useSelector(getVisibleContacts);\r\n    const dispatch = useDispatch();\r\n    const onDelete = id => dispatch(contactsAction.deleteContact(id))\r\n        return (\r\n        <ul>\r\n        {contacts.map(({ name, number, id }) => ( \r\n         <ContactlistItem \r\n         key={id}\r\n         id={id}\r\n         name={name}\r\n         number={number}\r\n         onDelete={()=>onDelete(id)}\r\n        />\r\n         ))}\r\n        </ul>\r\n    )};\r\nexport default ContactList;","import { useState } from 'react';\r\nimport styles from './ContactForm.module.css';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport contactsAction from '../redux/counter/counter-action';\r\nimport { getContacts } from '../redux/counter/counter_selectors';\r\n\r\nexport default function ContactForm({onSubmit}) {\r\n\r\n    const contacts = useSelector(getContacts);\r\n    const dispatch = useDispatch()\r\n\r\n    const [name, setName]= useState('');\r\n    const [number, setNumber]= useState('');\r\n\r\n    const handleChange=event=>{\r\n       const { name, value } = event.target;\r\n       switch (name){\r\n           case 'name':\r\n            setName(value);\r\n           break;\r\n            case 'number':\r\n             setNumber(value);\r\n            break;\r\n \r\n             default:   \r\n             return;\r\n        }\r\n    }\r\n      \r\n    const findByName = contactName => {\r\n     return contacts.some(({ name }) => name === contactName);\r\n    };\r\n\r\n    const handleSubmit=event=>{\r\n      event.preventDefault();\r\n        if (findByName(name)) {\r\n            alert(`${name} is already in contacts!`);\r\n            return;\r\n        }\r\n        dispatch(contactsAction.addContact({name, number}))\r\n        setName(\"\");\r\n        setNumber(\"\");\r\n    };\r\n\r\n    return(\r\n        <form  className={styles.form} onSubmit={handleSubmit}>\r\n        <label className={styles.formLabel}>Name\r\n        <input className={styles.formInput}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        value={name}\r\n        onChange={handleChange}\r\n        />\r\n        </label>\r\n\r\n        <label className={styles.formLabel}>Number\r\n        <input className={styles.formInput}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n        value={number}\r\n        onChange={handleChange}\r\n        />\r\n        </label>\r\n        <button className={styles.buttonSubmit} type=\"submit\">Add contact</button>\r\n        </form>\r\n        );\r\n};\r\n","import React from 'react';\r\nimport styles from './filter.module.css'\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport contactsAction from '../redux/counter/counter-action';\r\nimport { getFilter  } from '../redux/counter/counter_selectors';\r\n    \r\nconst Filter =() => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const onChange = e => dispatch(contactsAction.changeFilter(e.target.value))\r\n    return(\r\n\r\n  <label className={styles.filterLabel}>\r\n        Find contacts by name \r\n      <input className={styles.filterInput} type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n      />\r\n     </label>\r\n  )\r\n  };\r\nexport default Filter;","import './App.css';\nimport ContactList from './components/ContactList/ContactList'\nimport ContactForm from './components/ContactForm/ContactForm'\nimport Filter from './components/Filter/Filter'\nimport styles from './components/ContactForm/ContactForm.module.css'\n  \nfunction App(){\n   return (\n    <div className={styles.phonebook}>\n    <h1>Phonebook</h1>\n    <ContactForm />\n    <h2>Contacts</h2>\n    <Filter />\n    <ContactList /> \n    </div>\n  );\n  }\n  export default App;","import { combineReducers } from \"redux\";\r\nimport action from './counter-action.js'\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nconst items = createReducer([], {\r\n  [action.addContact]: (state, { payload }) => [...state, payload],\r\n  [action.deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [action.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//Redux\r\n\r\n  // import { combineReducers } from 'redux';\r\n// import types from './contacts-types';\r\n\r\n// const items = (state = [], { type, payload }) => {\r\n//     switch (type) {\r\n//         case types.ADD:\r\n//             return [...state, payload];\r\n        \r\n//         case types.DELETE:\r\n//             return state.filter(({ id }) => id !== payload);\r\n\r\n//         default:\r\n//             return state;\r\n//     }\r\n// };\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n//     switch (type) {\r\n//         case types.CHANGE_FILTER:\r\n//             return payload;\r\n\r\n//         default:\r\n//             return state;\r\n//     }\r\n// };\r\n\r\n\r\n// export default combineReducers({\r\n//     items,\r\n//     filter\r\n// });","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport logger from 'redux-logger'\r\nimport contactsReducer from './counter/counter-reducer'\r\nimport { persistStore, persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nconst middleware = (getDefaultMiddleware) => getDefaultMiddleware({\r\n  serializableCheck: {\r\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n  },\r\n}).concat(logger);\r\n\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n   blacklist:['filter']\r\n}\r\n\r\nconst store = configureStore({\r\n  reducer:{\r\n    contacts: persistReducer(persistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor=persistStore(store);\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };\r\n\r\n\r\n\r\n\r\n\r\n//  Redux\r\n\r\n// import { createStore, combineReducers } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n// import contactsReducers from './contacts/contacts-reduser';\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: contactsReducers,\r\n// });\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n// export default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport {Provider} from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport store from './components/redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n    <PersistGate losding={null} persistor ={store.persistor}>\n     <App />\n     </PersistGate>\n    </Provider>\n   </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"ContactForm_phonebook__tRBT-\",\"form\":\"ContactForm_form__2ETYu\",\"formLabel\":\"ContactForm_formLabel__3OAyt\",\"formInput\":\"ContactForm_formInput__3VtsJ\",\"buttonSubmit\":\"ContactForm_buttonSubmit__2m-Op\"};"],"sourceRoot":""}